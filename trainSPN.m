function trainedNetSPN = trainSPN(trainData, trainLabels, validationData, validationLabels, testData, testLabels, classWeights, epochs, dropout, L2Regularization)
    % Call the createSPN function to define the neural network architecture
    netSPN = createSPN(trainLabels, classWeights, dropout);

    % Specify training options
    options = trainingOptions("adam", ...
        "MaxEpochs", epochs, ...
        "MiniBatchSize", 20, ...
        "Shuffle", "every-epoch", ...
        "Plots", "training-progress", ...
        "ValidationData", {validationData, validationLabels}, ...
        "L2Regularization", L2Regularization, ...
        "OutputNetwork", "best-validation-loss", ...
        "Verbose", false);

    % Train the neural network
    trainedNetSPN = trainNetwork(trainData, trainLabels, netSPN, options);

    % Predict labels for test data
    predictedLabels = classify(trainedNetSPN, testData);
    actualLabels = testLabels;

    % Save predicted and actual labels
    save('predictedActualLabels.mat', 'predictedLabels', 'actualLabels');
end
